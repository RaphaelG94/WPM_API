// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WPM_API.Data.DataContext;

#nullable disable

namespace WPM_API.Data.ProjectMigration.Migrations
{
    [DbContext(typeof(DBData))]
    [Migration("20220607113707_024_FixClientEntityV3")]
    partial class _024_FixClientEntityV3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("WPM_API.Data.DataContext.AssetClass", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_AssetClass");

                    b.Property<string>("AssetTypeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("fromAdmin")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AssetTypeId");

                    b.HasIndex("CustomerId");

                    b.ToTable("AssetClass");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.ActivityLog", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_ActivityLog");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("ActivityLog");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.AdminDeviceOption", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_AdminDeviceOption");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OSType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PEOnly")
                        .HasColumnType("bit");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AdminDeviceOption");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.AdvancedProperty", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_AdvancedProperty");

                    b.Property<string>("BaseId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategoryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isEditable")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("BaseId");

                    b.HasIndex("CategoryId");

                    b.ToTable("AdvancedProperty");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Architecture", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_Architecture");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RuleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UpdatedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RuleId");

                    b.ToTable("Architecture");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.AssetMgmt.AssetModel", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_AssetModel");

                    b.Property<string>("AssetClassId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AssetID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssetStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssetTypeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Building")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CINumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Coordinates")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DeletedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DepreciationMonths")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Floor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoiceId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LocationId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PersonId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PurchaseValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Room")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VendorModelId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("AssetClassId");

                    b.HasIndex("AssetTypeId");

                    b.HasIndex("ClientId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("LocationId");

                    b.HasIndex("PersonId");

                    b.HasIndex("VendorModelId");

                    b.ToTable("AssetModel");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.AssetType", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_AssetType");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("fromAdmin")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("AssetType");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Attachment", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_Attachment");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<string>("GenFileName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByUserId");

                    b.ToTable("Attachment");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.AzureBlobStorage", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_AzureBlob");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DeletedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RessourceGroupId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("StorageAccountId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SubscriptionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("RessourceGroupId");

                    b.HasIndex("StorageAccountId");

                    b.HasIndex("SubscriptionId");

                    b.ToTable("AzureBlobStorage");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Base", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_Base");

                    b.Property<string>("BaseStatusId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CredentialsId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DeletedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResourceGroupId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StorageAccountId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SubscriptionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UpdatedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VirtualNetworkId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("VpnId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("BaseStatusId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ResourceGroupId");

                    b.HasIndex("StorageAccountId");

                    b.HasIndex("SubscriptionId");

                    b.HasIndex("VirtualNetworkId");

                    b.HasIndex("VpnId");

                    b.ToTable("Base");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.BaseStatus", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_BaseStatus");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ErrorMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResourceGroupStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StorageAccountStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VPNStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VirtualNetworkStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BaseStatus");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Bios", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_BiosId");

                    b.Property<string>("BiosSettingsId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("InstalledVersion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InternalVersion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManufacturerVersion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BiosSettingsId");

                    b.ToTable("Bios");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.BIOSModel", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_HardwareModel");

                    b.Property<string>("ContentId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReadMeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ValidOS")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vendor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ContentId");

                    b.HasIndex("ReadMeId");

                    b.ToTable("BIOSModel");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.BiosSettings", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_BiosSettingsId");

                    b.HasKey("Id");

                    b.ToTable("BiosSettings");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Category", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_Category");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Certification", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_Certification");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Certification");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.ChangeLog", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_ChangeLog");

                    b.Property<DateTime>("DateChanged")
                        .HasColumnType("datetime2");

                    b.Property<string>("EntityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NewValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryKeyValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropertyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ChangeLog");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Client", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_Client");

                    b.Property<string>("AdminPasswordLinux")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssetId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssetModelId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BaseId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BaseLineFile1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BaseLineFile2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BaseLineFile3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BiosId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CSPname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CSPvendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CSPversion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CloudFlag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DeletedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DownloadSeedURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HardwareId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("HyperVisor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstallScript")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstallationDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InventoryId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsOnline")
                        .HasColumnType("bit");

                    b.Property<string>("JoinedDomain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KeyboardLayoutLinux")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KeyboardLayoutWindows")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguagePackLinux")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastInventoryUpdate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastOnlineStatusUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LocalAdminPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocalAdminUsername")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainFrequentUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModelSeries")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NetworkId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("OSArchitecture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OSEdition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OSInstallDateUTC")
                        .HasColumnType("datetime2");

                    b.Property<string>("OSLanguage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OSMemorySize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OSOperatingSystemSKU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OSProductSuite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OSSettingsImageId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OSType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OSTypeDevice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OSVersion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrganizationalUnitId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("OsId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PartitionEncryptionPassLinux")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Processor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Proxy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PurchaseId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subnet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeZoneLinux")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeZoneWindows")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Timezone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UUID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unattend")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UsageStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPasswordLinux")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsernameLinux")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WdsIp")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BaseId");

                    b.HasIndex("BiosId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("HardwareId");

                    b.HasIndex("NetworkId");

                    b.HasIndex("OrganizationalUnitId");

                    b.HasIndex("OsId");

                    b.HasIndex("PurchaseId");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.ClientClientProperty", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_ClientClientProperty");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ClientPropertyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("ClientPropertyId");

                    b.ToTable("ClientClientProperty");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.ClientOption", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_ClientOption");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeviceOptionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("OSType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<bool>("PEOnly")
                        .HasColumnType("bit");

                    b.Property<string>("UpdatedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("DeviceOptionId");

                    b.ToTable("ClientOption");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.ClientParameter", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_ClientParameter");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsEditable")
                        .HasColumnType("bit");

                    b.Property<string>("ParameterName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropertyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("ClientParameter");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.ClientProperty", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_ClientProperty");

                    b.Property<string>("CategoryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Command")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParameterName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropertyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("ClientProperty");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.ClientSoftware", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_ClientSoftware");

                    b.Property<bool>("AllWin10Versions")
                        .HasColumnType("bit");

                    b.Property<bool>("AllWin11Versions")
                        .HasColumnType("bit");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerSoftwareId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DeletedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Install")
                        .HasColumnType("bit");

                    b.Property<string>("RevisionNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RunningContext")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoftwareId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UpdatedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("CustomerSoftwareId");

                    b.HasIndex("SoftwareId");

                    b.ToTable("ClientSoftware");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.ClientTask", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_ClientTask");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaskId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("TaskId");

                    b.ToTable("ClientTask");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.CloudEntryPoint", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_CloudEntryPoint");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientSecret")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DeletedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsStandard")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("CloudEntryPoint");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Company", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_Company");

                    b.Property<string>("CorporateName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DeletedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExpertId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FormOfOrganization")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeadquarterId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LinkWebsite")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ExpertId");

                    b.HasIndex("HeadquarterId");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Customer", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_Customer");

                    b.Property<bool>("AutoRegisterClients")
                        .HasColumnType("bit");

                    b.Property<string>("AutoRegisterPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BannerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BannerLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Btn1Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Btn2Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Btn3Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Btn4Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CmdBtn1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CmdBtn2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CmdBtn3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CmdBtn4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CsdpContainer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CsdpRoot")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deletable")
                        .HasColumnType("bit");

                    b.Property<string>("DeletedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IconLeftId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IconRightId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("LtSASExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LtSASRead")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LtSASWríte")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainCompanyId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficeConfig")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OpeningTimes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemhouseId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UpdatedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("UseCustomConfig")
                        .HasColumnType("bit");

                    b.Property<string>("WinPEDownloadLink")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BannerId");

                    b.HasIndex("IconLeftId");

                    b.HasIndex("IconRightId");

                    b.HasIndex("MainCompanyId");

                    b.HasIndex("SystemhouseId");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.CustomerDriver", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_CustomerDriver");

                    b.Property<string>("ConnectionString")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DriverId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubFolderPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Vendor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CustomerDriver");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.CustomerHardwareModel", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_CustomerHardwareModel");

                    b.Property<int>("Counter")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("CustomerHardwareModel");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.CustomerImage", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_CustomerImage");

                    b.Property<string>("BuildNr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerImageStreamId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DeletedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DisplayRevisionNumber")
                        .HasColumnType("int");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OEMPartitionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("PublishInShop")
                        .HasColumnType("bit");

                    b.Property<string>("RevisionNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnattendId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Update")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerImageStreamId");

                    b.HasIndex("OEMPartitionId");

                    b.HasIndex("UnattendId");

                    b.ToTable("CustomerImage");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.CustomerImageStream", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_ImageStream");

                    b.Property<string>("Architecture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DeletedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescriptionShort")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Edition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IconId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ImageStreamId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocalSettingLinux")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrefixUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SASKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubFolderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Vendor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("IconId");

                    b.ToTable("CustomerImageStream");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.CustomerSoftware", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_CustomerSoftware");

                    b.Property<bool>("AllWin10Versions")
                        .HasColumnType("bit");

                    b.Property<bool>("AllWin11Versions")
                        .HasColumnType("bit");

                    b.Property<string>("Checksum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompliancyRule")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerSoftwareStreamId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CustomerStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DedicatedDownloadLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DisplayRevisionNumber")
                        .HasColumnType("int");

                    b.Property<string>("InstallationTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MinimalSoftwareId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NextSoftwareId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PackageSize")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prerequisites")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrevSoftwareId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RevisionNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuleApplicabilityId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RuleDetectionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RunningContext")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoftwareId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaskInstallId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TaskUninstallId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TaskUpdateId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VendorReleaseDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerSoftwareStreamId");

                    b.HasIndex("RuleApplicabilityId");

                    b.HasIndex("RuleDetectionId");

                    b.HasIndex("TaskInstallId");

                    b.HasIndex("TaskUninstallId");

                    b.HasIndex("TaskUpdateId");

                    b.ToTable("CustomerSoftware");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.CustomerSoftwareStream", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_CustomerSoftwareStream");

                    b.Property<string>("ApplicationOwnerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Architecture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientOrServer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DeletedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescriptionShort")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DownloadLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("GnuLicence")
                        .HasColumnType("bit");

                    b.Property<string>("IconId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsEnterpriseStream")
                        .HasColumnType("bit");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("ReleasePlanId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SoftwareStreamId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateSettings")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Vendor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationOwnerId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("IconId");

                    b.HasIndex("ReleasePlanId");

                    b.ToTable("CustomerSoftwareStream");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Default", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_Default");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Default");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Disk", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_Disk");

                    b.Property<int>("DiskType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SizeInGb")
                        .HasColumnType("int");

                    b.Property<string>("VirtualMachineId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("VirtualMachineId");

                    b.ToTable("Disk");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.DNS", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_DNS");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DomainId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Forwarder")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DomainId");

                    b.ToTable("DNS");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Domain", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_Domain");

                    b.Property<string>("BaseId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DeletedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DomainUserCSVId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ExecutionVMId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GpoId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Office365ConfigurationXMLId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tld")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BaseId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DomainUserCSVId");

                    b.HasIndex("GpoId");

                    b.HasIndex("Office365ConfigurationXMLId");

                    b.ToTable("Domain");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.DomainRegistrationTemp", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_DomainRegistrationTemp");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DomainRegistrationTemp");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.DomainUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_DomainUser");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Displayname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DomainId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberOf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SamAccountName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserGivenName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPrincipalName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Workphone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DomainId");

                    b.ToTable("DomainUser");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Driver", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_Driver");

                    b.Property<string>("ConnectionString")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContainerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PublishInShop")
                        .HasColumnType("bit");

                    b.Property<string>("SubFolderPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Vendor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Driver");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.DriverShopItem", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_DriverShopItem");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DriverId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ShopItemId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UpdatedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DriverId");

                    b.HasIndex("ShopItemId");

                    b.ToTable("DriverShopItem");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.ErrorLog", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_ErrorLog");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Error")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ErrorLog");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.ExecutionLog", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_ExecutionLog");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExecutionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Script")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScriptVersionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UpdatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("VirtualMachineId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("ScriptVersionId");

                    b.HasIndex("UserId");

                    b.HasIndex("VirtualMachineId");

                    b.ToTable("ExecutionLog");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.File", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_File");

                    b.Property<string>("CustomerHardwareModelId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Guid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScriptVersionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ShopItemId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TaskId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("VendorModelId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerHardwareModelId");

                    b.HasIndex("ScriptVersionId");

                    b.HasIndex("ShopItemId");

                    b.HasIndex("TaskId");

                    b.HasIndex("VendorModelId");

                    b.ToTable("File");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.GroupPolicyObject", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_GPO");

                    b.Property<bool>("BsiCertified")
                        .HasColumnType("bit");

                    b.Property<string>("LockscreenId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Settings")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WallpaperId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("LockscreenId");

                    b.HasIndex("WallpaperId");

                    b.ToTable("GroupPolicyObject");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Hardware", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_HardwareId");

                    b.Property<string>("ChipSet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayResolution")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HDD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModelNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Processor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RAM")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceTag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TPMChipData")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Hardware");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.HDDPartition", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_HDDPartitionId");

                    b.Property<string>("ClientId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DriveLetter")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Overprovisioning")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartitionNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SizeInBytes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("isGpt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("HDDPartition");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Image", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_Image");

                    b.Property<string>("BuildNr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DisplayRevisionNumber")
                        .HasColumnType("int");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageStreamId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OEMPartitionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("PublishInShop")
                        .HasColumnType("bit");

                    b.Property<string>("RevisionNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnattendId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Update")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ImageStreamId");

                    b.HasIndex("OEMPartitionId");

                    b.HasIndex("UnattendId");

                    b.ToTable("Image");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.ImagesClient", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_SoftwaresClient");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UpdatedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("ImageId");

                    b.ToTable("ImagesClient");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.ImagesCustomer", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_SoftwaresCustomer");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DeletedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UpdatedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ImageId");

                    b.ToTable("ImagesCustomer");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.ImagesSystemhouse", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_SoftwaresSystemhouse");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SystemhouseId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UpdatedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ImageId");

                    b.HasIndex("SystemhouseId");

                    b.ToTable("ImagesSystemhouse");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.ImageStream", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_ImageStream");

                    b.Property<string>("Architecture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescriptionShort")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Edition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IconId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrefixUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SASKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubFolderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Vendor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IconId");

                    b.ToTable("ImageStream");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Inventory", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_Inventory");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OperationType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Inventory");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Location", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_Location");

                    b.Property<string>("AzureLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CityAbbreviation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryAbbreviation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DeletedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DownloadSpeed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameAbbreviation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Postcode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PublicIP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeZone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UploadSpeed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.MacAddress", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_MacAddress");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("MacAddress");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.NetworkConfiguration", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_NetworkConfigurationId");

                    b.Property<string>("DHCP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DNS")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gateway")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IPv4")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IPv6")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("NetworkConfiguration");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.NotificationEmail", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_NotificationEmail");

                    b.Property<int>("AttemptsCount")
                        .HasColumnType("int");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastAttemptDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastAttemptError")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ProcessedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SchedulerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("ToBccEmailAddresses")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToCcEmailAddresses")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToEmailAddresses")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SchedulerId");

                    b.ToTable("NotificationEmail");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.NotificationEmailAttachment", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_NotificationEmailAttachment");

                    b.Property<string>("AttachmentId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NotificationEmailId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("AttachmentId");

                    b.HasIndex("NotificationEmailId");

                    b.ToTable("NotificationEmailAttachment");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Order", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_Order");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByUserId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.OrderShopItem", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_OrderShopItem");

                    b.Property<string>("OrderId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ShopItemId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ShopItemId");

                    b.ToTable("OrderShopItem");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.OrganizationalUnit", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_OrganizationalUnit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DomainId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsLeaf")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrganizationalUnitId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("DomainId");

                    b.HasIndex("OrganizationalUnitId");

                    b.ToTable("OrganizationalUnit");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.OS", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_OSId");

                    b.Property<string>("KeyboardLayout")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguagePackage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OSVersion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Uefi")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("OS");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.OSModel", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_OSModel");

                    b.Property<string>("Architecture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContentId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OSName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OSType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SupportEnd")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Vendor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ContentId");

                    b.ToTable("OSModel");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.OsVersionName", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_OSVersion");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RuleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UpdatedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RuleId");

                    b.ToTable("OsVersionName");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Parameter", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_Parameter");

                    b.Property<string>("ClientOptionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DeletedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExecutionLogId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsEditable")
                        .HasColumnType("bit");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientOptionId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ExecutionLogId");

                    b.ToTable("Parameter");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Person", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_Person");

                    b.Property<string>("AcademicDegree")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CostCenter")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DeletedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DepartementName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartementShort")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Domain")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailOptional")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailPrimary")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeNr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FaxNr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GivenName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoomNr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Purchase", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_PurchaseId");

                    b.Property<string>("AcquisitionCost")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostUnitAssignment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DecommissioningDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PurchaseDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vendor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Purchase");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.ReleasePlan", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_ReleasePlan");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DeletedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("ReleasePlan");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.ResourceGroup", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_ResourceGroup");

                    b.Property<string>("AzureSubscriptionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DeletedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("ResourceGroup");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Role", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_Role");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Rule", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_Rule");

                    b.Property<bool>("CheckVersionNr")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DataId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DeletedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OsType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Successon")
                        .HasColumnType("bit");

                    b.Property<string>("TypeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UpdatedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VersionNr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DataId");

                    b.HasIndex("TypeId");

                    b.ToTable("Rule");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.RuleType", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_RuleType");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RuleType");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Scheduler", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_Scheduler");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndProcessDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EntityData1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntityData2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntityData3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntityData4")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntityId1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntityId2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntityId3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntityId4")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ErrorMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsSynchronous")
                        .HasColumnType("bit");

                    b.Property<DateTime>("OnDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ParentSchedulerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("SchedulerActionType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartProcessDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("ParentSchedulerId");

                    b.ToTable("Scheduler");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Script", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_Script");

                    b.Property<int>("AuthorType")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OSType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PEOnly")
                        .HasColumnType("bit");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("showToCustomer")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Script");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.ScriptVersion", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_ScriptVersion");

                    b.Property<string>("AdminDeviceOptionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ContentUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("ScriptId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("AdminDeviceOptionId");

                    b.HasIndex("ScriptId");

                    b.ToTable("ScriptVersion");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Server", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_Server");

                    b.Property<string>("DomainId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("OrganizationalUnitId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("VirtualMachineId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("DomainId");

                    b.HasIndex("OrganizationalUnitId");

                    b.HasIndex("VirtualMachineId");

                    b.ToTable("Server");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.ShopItem", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_ShopItem");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescriptionShort")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManagedServiceLifecyclePrice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManagedServicePrice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Price")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ShopItem");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.ShopItemCategory", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_ShopItemCategory");

                    b.Property<string>("CategoryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ShopItemId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ShopItemId");

                    b.ToTable("ShopItemCategory");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.SmartDeploy.PreinstalledSoftware", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_PreinstalledSoftware");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("InstalledAt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("PreinstalledSoftware");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.SmartDeploy.RevisionMessage", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_RevisionMessage");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DisplayRevisionNumber")
                        .HasColumnType("int");

                    b.Property<string>("ImageId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoftwareId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("RevisionMessage");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Software", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_Software");

                    b.Property<bool>("AllWin10Versions")
                        .HasColumnType("bit");

                    b.Property<bool>("AllWin11Versions")
                        .HasColumnType("bit");

                    b.Property<string>("Checksum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompliancyRule")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DedicatedDownloadLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DisplayRevisionNumber")
                        .HasColumnType("int");

                    b.Property<string>("InstallationTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MinimalSoftwareId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NextSoftwareId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PackageSize")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prerequisites")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrevSoftwareId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PublishInShop")
                        .HasColumnType("bit");

                    b.Property<string>("RevisionNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuleApplicabilityId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RuleDetectionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RunningContext")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoftwareStreamId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaskInstallId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TaskUninstallId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TaskUpdateId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VendorReleaseDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RuleApplicabilityId");

                    b.HasIndex("RuleDetectionId");

                    b.HasIndex("SoftwareStreamId");

                    b.HasIndex("TaskInstallId");

                    b.HasIndex("TaskUninstallId");

                    b.HasIndex("TaskUpdateId");

                    b.ToTable("Software");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.SoftwaresClient", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_SoftwaresClient");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SoftwareId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UpdatedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("SoftwareId");

                    b.ToTable("SoftwaresClient");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.SoftwaresCustomer", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_SoftwaresCustomer");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DeletedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SoftwareId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UpdatedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("SoftwareId");

                    b.ToTable("SoftwaresCustomer");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.SoftwaresSystemhouse", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_SoftwaresSystemhouse");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SoftwareId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SystemhouseId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UpdatedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SoftwareId");

                    b.HasIndex("SystemhouseId");

                    b.ToTable("SoftwaresSystemhouse");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.SoftwareStream", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_SoftwareStream");

                    b.Property<string>("Architecture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescriptionShort")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DownloadLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("GnuLicence")
                        .HasColumnType("bit");

                    b.Property<string>("IconId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateSettings")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Vendor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IconId");

                    b.ToTable("SoftwareStream");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.StorageAccount", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_StorageAccount");

                    b.Property<string>("AzureId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DeletedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResourceGroupId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ResourceGroupId");

                    b.ToTable("StorageAccount");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Storages.StorageEntryPoint", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_StorageEntryPoint");

                    b.Property<string>("BlobContainerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DeletedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCSDP")
                        .HasColumnType("bit");

                    b.Property<string>("Kind")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Managed")
                        .HasColumnType("bit");

                    b.Property<string>("ResourceGrpName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StorageAccount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StorageAccountType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubscriptionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("StorageEntryPoint");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Subnet", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_Subnet");

                    b.Property<string>("AddressRange")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("VirtualNetworkId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("VirtualNetworkId");

                    b.ToTable("Subnet");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Subscription", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_Subscription");

                    b.Property<string>("AzureId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DeletedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Subscription");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Systemhouse", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_Systemhouse");

                    b.Property<string>("CreatedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deletable")
                        .HasColumnType("bit");

                    b.Property<string>("DeletedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Systemhouse");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Task", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_Task");

                    b.Property<string>("BlockFilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CheckVersionNr")
                        .HasColumnType("bit");

                    b.Property<string>("CommandLine")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescriptionShort")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstimatedExecutionTime")
                        .HasColumnType("int");

                    b.Property<string>("ExePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExecutionContext")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExecutionFileId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("InstallationType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RestartRequired")
                        .HasColumnType("bit");

                    b.Property<string>("RunningContext")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SuccessValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("UseShellExecute")
                        .HasColumnType("bit");

                    b.Property<string>("VersionNr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Visibility")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ExecutionFileId");

                    b.ToTable("Task");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Token", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_Token");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Token");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_User");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Deletable")
                        .HasColumnType("bit");

                    b.Property<string>("DeletedByUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("SystemhouseId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UpdatedByUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("SystemhouseId");

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.UserCustomer", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_UserCustomer");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("UserId");

                    b.ToTable("UserCustomer");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.UserForgotPassword", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_UserForgotPassword");

                    b.Property<DateTime?>("ApprovedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApproverIpAddress")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatorIpAddress")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RequestGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserForgotPassword");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.UserRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_UserRole");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.UserSubscription", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SubscriptionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("SubscriptionId");

                    b.HasIndex("UserId");

                    b.ToTable("UserSubscription");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.VendorModel", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_VendorModel");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModelFamily")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModelType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("VendorModel");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.VirtualMachine", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_VirtualMachine");

                    b.Property<string>("AdminUserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdminUserPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AzureId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BaseId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CurrentCustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LocalIp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OperatingSystem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subnet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubscriptionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubscriptionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BaseId");

                    b.ToTable("VirtualMachine");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.VirtualNetwork", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_VirtualNetwork");

                    b.Property<string>("AddressRange")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AzureId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Dns")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("VirtualNetwork");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Vpn", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_Vpn");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LocalAddressRange")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocalPublicIp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SharedKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VirtualNetwork")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VirtualPublicIp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Vpn");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Win10Version", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_Win10Version");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RuleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UpdatedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RuleId");

                    b.ToTable("Win10Version");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Win11Version", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_Win11Version");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RuleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UpdatedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RuleId");

                    b.ToTable("Win11Version");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.WMIInvenotryCmds", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_WMIInventoryCmds");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Command")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("WMIInvenotryCmds");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Workflow", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_Workflow");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Workflow");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.HardwareModel", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("PK_HardwareModel");

                    b.Property<string>("BIOSModelId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModelFamily")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModelType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OSModelId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("ProductionEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ProductionStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Vendor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BIOSModelId");

                    b.HasIndex("OSModelId");

                    b.ToTable("HardwareModel");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.AssetClass", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.AssetType", "AssetType")
                        .WithMany()
                        .HasForeignKey("AssetTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WPM_API.Data.DataContext.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AssetType");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.ActivityLog", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.Client", null)
                        .WithMany("ActivityLogs")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.AdvancedProperty", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.Base", "Base")
                        .WithMany("Properties")
                        .HasForeignKey("BaseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WPM_API.Data.DataContext.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Base");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Architecture", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.Rule", null)
                        .WithMany("Architecture")
                        .HasForeignKey("RuleId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.AssetMgmt.AssetModel", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.AssetClass", "AssetClass")
                        .WithMany()
                        .HasForeignKey("AssetClassId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WPM_API.Data.DataContext.Entities.AssetType", "AssetType")
                        .WithMany()
                        .HasForeignKey("AssetTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WPM_API.Data.DataContext.Entities.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WPM_API.Data.DataContext.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WPM_API.Data.DataContext.Entities.File", "Invoice")
                        .WithMany()
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WPM_API.Data.DataContext.Entities.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WPM_API.Data.DataContext.Entities.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WPM_API.Data.DataContext.Entities.VendorModel", "VendorModel")
                        .WithMany()
                        .HasForeignKey("VendorModelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AssetClass");

                    b.Navigation("AssetType");

                    b.Navigation("Client");

                    b.Navigation("Customer");

                    b.Navigation("Invoice");

                    b.Navigation("Location");

                    b.Navigation("Person");

                    b.Navigation("VendorModel");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.AssetType", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Attachment", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedByUser");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.AzureBlobStorage", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WPM_API.Data.DataContext.Entities.ResourceGroup", "RessourceGroup")
                        .WithMany()
                        .HasForeignKey("RessourceGroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WPM_API.Data.DataContext.Entities.StorageAccount", "StorageAccount")
                        .WithMany()
                        .HasForeignKey("StorageAccountId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WPM_API.Data.DataContext.Entities.Subscription", "Subscription")
                        .WithMany()
                        .HasForeignKey("SubscriptionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("RessourceGroup");

                    b.Navigation("StorageAccount");

                    b.Navigation("Subscription");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Base", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.BaseStatus", "BaseStatus")
                        .WithMany()
                        .HasForeignKey("BaseStatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WPM_API.Data.DataContext.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WPM_API.Data.DataContext.Entities.ResourceGroup", "ResourceGroup")
                        .WithMany()
                        .HasForeignKey("ResourceGroupId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("WPM_API.Data.DataContext.Entities.StorageAccount", "StorageAccount")
                        .WithMany()
                        .HasForeignKey("StorageAccountId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("WPM_API.Data.DataContext.Entities.Subscription", "Subscription")
                        .WithMany()
                        .HasForeignKey("SubscriptionId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("WPM_API.Data.DataContext.Entities.VirtualNetwork", "VirtualNetwork")
                        .WithMany()
                        .HasForeignKey("VirtualNetworkId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("WPM_API.Data.DataContext.Entities.Vpn", "Vpn")
                        .WithMany()
                        .HasForeignKey("VpnId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("BaseStatus");

                    b.Navigation("Customer");

                    b.Navigation("ResourceGroup");

                    b.Navigation("StorageAccount");

                    b.Navigation("Subscription");

                    b.Navigation("VirtualNetwork");

                    b.Navigation("Vpn");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Bios", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.BiosSettings", "BiosSettings")
                        .WithMany()
                        .HasForeignKey("BiosSettingsId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("BiosSettings");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.BIOSModel", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.File", "Content")
                        .WithMany()
                        .HasForeignKey("ContentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("WPM_API.Data.DataContext.Entities.File", "ReadMe")
                        .WithMany()
                        .HasForeignKey("ReadMeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Content");

                    b.Navigation("ReadMe");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Client", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.Base", "Base")
                        .WithMany("Clients")
                        .HasForeignKey("BaseId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("WPM_API.Data.DataContext.Entities.Bios", "Bios")
                        .WithMany()
                        .HasForeignKey("BiosId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("WPM_API.Data.DataContext.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WPM_API.Data.DataContext.Entities.Hardware", "Hardware")
                        .WithMany()
                        .HasForeignKey("HardwareId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("WPM_API.Data.DataContext.Entities.NetworkConfiguration", "Network")
                        .WithMany()
                        .HasForeignKey("NetworkId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("WPM_API.Data.DataContext.Entities.OrganizationalUnit", "OrganizationalUnit")
                        .WithMany()
                        .HasForeignKey("OrganizationalUnitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WPM_API.Data.DataContext.Entities.OS", "Os")
                        .WithMany()
                        .HasForeignKey("OsId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("WPM_API.Data.DataContext.Entities.Purchase", "Purchase")
                        .WithMany()
                        .HasForeignKey("PurchaseId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Base");

                    b.Navigation("Bios");

                    b.Navigation("Customer");

                    b.Navigation("Hardware");

                    b.Navigation("Network");

                    b.Navigation("OrganizationalUnit");

                    b.Navigation("Os");

                    b.Navigation("Purchase");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.ClientClientProperty", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.Client", "Client")
                        .WithMany("Properties")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WPM_API.Data.DataContext.Entities.ClientProperty", "ClientProperty")
                        .WithMany()
                        .HasForeignKey("ClientPropertyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("ClientProperty");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.ClientOption", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.Client", "Client")
                        .WithMany("AssignedOptions")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WPM_API.Data.DataContext.Entities.ScriptVersion", "DeviceOption")
                        .WithMany()
                        .HasForeignKey("DeviceOptionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("DeviceOption");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.ClientParameter", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.ClientProperty", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.ClientSoftware", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.Client", "Client")
                        .WithMany("AssignedSoftware")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WPM_API.Data.DataContext.Entities.CustomerSoftware", "CustomerSoftware")
                        .WithMany()
                        .HasForeignKey("CustomerSoftwareId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WPM_API.Data.DataContext.Entities.Software", null)
                        .WithMany("AssignedClients")
                        .HasForeignKey("SoftwareId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Client");

                    b.Navigation("CustomerSoftware");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.ClientTask", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.Client", "Client")
                        .WithMany("Tasks")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WPM_API.Data.DataContext.Entities.Task", "Task")
                        .WithMany()
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.CloudEntryPoint", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.Customer", "Customer")
                        .WithMany("CloudEntryPoints")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Company", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.Customer", "Customer")
                        .WithMany("Companies")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WPM_API.Data.DataContext.Entities.Person", "Expert")
                        .WithMany()
                        .HasForeignKey("ExpertId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WPM_API.Data.DataContext.Entities.Location", "Headquarter")
                        .WithMany()
                        .HasForeignKey("HeadquarterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Expert");

                    b.Navigation("Headquarter");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Customer", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.File", "Banner")
                        .WithMany()
                        .HasForeignKey("BannerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("WPM_API.Data.DataContext.Entities.File", "IconLeft")
                        .WithMany()
                        .HasForeignKey("IconLeftId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("WPM_API.Data.DataContext.Entities.File", "IconRight")
                        .WithMany()
                        .HasForeignKey("IconRightId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("WPM_API.Data.DataContext.Entities.Company", "MainCompany")
                        .WithMany()
                        .HasForeignKey("MainCompanyId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("WPM_API.Data.DataContext.Entities.Systemhouse", "Systemhouse")
                        .WithMany("Customer")
                        .HasForeignKey("SystemhouseId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Banner");

                    b.Navigation("IconLeft");

                    b.Navigation("IconRight");

                    b.Navigation("MainCompany");

                    b.Navigation("Systemhouse");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.CustomerImage", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.CustomerImageStream", null)
                        .WithMany("Images")
                        .HasForeignKey("CustomerImageStreamId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WPM_API.Data.DataContext.Entities.File", "OEMPartition")
                        .WithMany()
                        .HasForeignKey("OEMPartitionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WPM_API.Data.DataContext.Entities.File", "Unattend")
                        .WithMany()
                        .HasForeignKey("UnattendId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("OEMPartition");

                    b.Navigation("Unattend");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.CustomerImageStream", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.Customer", null)
                        .WithMany("CustomerImageStreams")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WPM_API.Data.DataContext.Entities.File", "Icon")
                        .WithMany()
                        .HasForeignKey("IconId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Icon");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.CustomerSoftware", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.CustomerSoftwareStream", null)
                        .WithMany("StreamMembers")
                        .HasForeignKey("CustomerSoftwareStreamId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WPM_API.Data.DataContext.Entities.Rule", "RuleApplicability")
                        .WithMany()
                        .HasForeignKey("RuleApplicabilityId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("WPM_API.Data.DataContext.Entities.Rule", "RuleDetection")
                        .WithMany()
                        .HasForeignKey("RuleDetectionId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("WPM_API.Data.DataContext.Entities.Task", "TaskInstall")
                        .WithMany()
                        .HasForeignKey("TaskInstallId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("WPM_API.Data.DataContext.Entities.Task", "TaskUninstall")
                        .WithMany()
                        .HasForeignKey("TaskUninstallId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("WPM_API.Data.DataContext.Entities.Task", "TaskUpdate")
                        .WithMany()
                        .HasForeignKey("TaskUpdateId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("RuleApplicability");

                    b.Navigation("RuleDetection");

                    b.Navigation("TaskInstall");

                    b.Navigation("TaskUninstall");

                    b.Navigation("TaskUpdate");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.CustomerSoftwareStream", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.Person", "ApplicationOwner")
                        .WithMany()
                        .HasForeignKey("ApplicationOwnerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WPM_API.Data.DataContext.Entities.Customer", null)
                        .WithMany("CustomerSoftwareStreams")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WPM_API.Data.DataContext.Entities.File", "Icon")
                        .WithMany()
                        .HasForeignKey("IconId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("WPM_API.Data.DataContext.Entities.ReleasePlan", "ReleasePlan")
                        .WithMany()
                        .HasForeignKey("ReleasePlanId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ApplicationOwner");

                    b.Navigation("Icon");

                    b.Navigation("ReleasePlan");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Default", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.Customer", "Customer")
                        .WithMany("Defaults")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Disk", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.VirtualMachine", null)
                        .WithMany("Disks")
                        .HasForeignKey("VirtualMachineId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.DNS", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.Domain", null)
                        .WithMany("DNS")
                        .HasForeignKey("DomainId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Domain", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.Base", "Base")
                        .WithMany()
                        .HasForeignKey("BaseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WPM_API.Data.DataContext.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WPM_API.Data.DataContext.Entities.File", "DomainUserCSV")
                        .WithMany()
                        .HasForeignKey("DomainUserCSVId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("WPM_API.Data.DataContext.Entities.GroupPolicyObject", "Gpo")
                        .WithMany()
                        .HasForeignKey("GpoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("WPM_API.Data.DataContext.Entities.File", "Office365ConfigurationXML")
                        .WithMany()
                        .HasForeignKey("Office365ConfigurationXMLId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Base");

                    b.Navigation("Customer");

                    b.Navigation("DomainUserCSV");

                    b.Navigation("Gpo");

                    b.Navigation("Office365ConfigurationXML");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.DomainUser", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.Domain", "Domain")
                        .WithMany("DomainUsers")
                        .HasForeignKey("DomainId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Domain");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.DriverShopItem", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.Driver", "Driver")
                        .WithMany("DriverShopItems")
                        .HasForeignKey("DriverId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WPM_API.Data.DataContext.Entities.ShopItem", "ShopItem")
                        .WithMany("DriverShopItems")
                        .HasForeignKey("ShopItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Driver");

                    b.Navigation("ShopItem");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.ExecutionLog", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WPM_API.Data.DataContext.Entities.ScriptVersion", "ScriptVersion")
                        .WithMany()
                        .HasForeignKey("ScriptVersionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WPM_API.Data.DataContext.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WPM_API.Data.DataContext.Entities.VirtualMachine", "VirtualMachine")
                        .WithMany()
                        .HasForeignKey("VirtualMachineId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("ScriptVersion");

                    b.Navigation("User");

                    b.Navigation("VirtualMachine");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.File", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.CustomerHardwareModel", null)
                        .WithMany("Drivers")
                        .HasForeignKey("CustomerHardwareModelId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("WPM_API.Data.DataContext.Entities.ScriptVersion", null)
                        .WithMany("Attachments")
                        .HasForeignKey("ScriptVersionId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("WPM_API.Data.DataContext.Entities.ShopItem", null)
                        .WithMany("Images")
                        .HasForeignKey("ShopItemId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("WPM_API.Data.DataContext.Entities.Task", "Task")
                        .WithMany("Files")
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("WPM_API.Data.DataContext.Entities.VendorModel", null)
                        .WithMany("Files")
                        .HasForeignKey("VendorModelId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Task");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.GroupPolicyObject", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.File", "Lockscreen")
                        .WithMany()
                        .HasForeignKey("LockscreenId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WPM_API.Data.DataContext.Entities.File", "Wallpaper")
                        .WithMany()
                        .HasForeignKey("WallpaperId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Lockscreen");

                    b.Navigation("Wallpaper");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.HDDPartition", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.Client", null)
                        .WithMany("Partition")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Image", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.ImageStream", null)
                        .WithMany("Images")
                        .HasForeignKey("ImageStreamId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WPM_API.Data.DataContext.Entities.File", "OEMPartition")
                        .WithMany()
                        .HasForeignKey("OEMPartitionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WPM_API.Data.DataContext.Entities.File", "Unattend")
                        .WithMany()
                        .HasForeignKey("UnattendId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("OEMPartition");

                    b.Navigation("Unattend");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.ImagesClient", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WPM_API.Data.DataContext.Entities.Image", "Image")
                        .WithMany("Clients")
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Image");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.ImagesCustomer", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WPM_API.Data.DataContext.Entities.Image", "Image")
                        .WithMany("Customers")
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Image");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.ImagesSystemhouse", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.Image", "Image")
                        .WithMany("Systemhouses")
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WPM_API.Data.DataContext.Entities.Systemhouse", "Systemhouse")
                        .WithMany()
                        .HasForeignKey("SystemhouseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Image");

                    b.Navigation("Systemhouse");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.ImageStream", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.File", "Icon")
                        .WithMany()
                        .HasForeignKey("IconId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Icon");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Inventory", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Location", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.Company", "Company")
                        .WithMany("Locations")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WPM_API.Data.DataContext.Entities.Customer", "Customer")
                        .WithMany("Locations")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.MacAddress", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.Client", "Client")
                        .WithMany("MacAddresses")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.NotificationEmail", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.Scheduler", "Scheduler")
                        .WithMany("NotificationEmails")
                        .HasForeignKey("SchedulerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Scheduler");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.NotificationEmailAttachment", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.Attachment", "Attachment")
                        .WithMany()
                        .HasForeignKey("AttachmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WPM_API.Data.DataContext.Entities.NotificationEmail", "NotificationEmail")
                        .WithMany("NotificationEmailAttachments")
                        .HasForeignKey("NotificationEmailId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Attachment");

                    b.Navigation("NotificationEmail");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Order", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.OrderShopItem", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.Order", "Order")
                        .WithMany("ShopItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WPM_API.Data.DataContext.Entities.ShopItem", "ShopItem")
                        .WithMany()
                        .HasForeignKey("ShopItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("ShopItem");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.OrganizationalUnit", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.Domain", null)
                        .WithMany("OrganizationalUnits")
                        .HasForeignKey("DomainId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("WPM_API.Data.DataContext.Entities.OrganizationalUnit", null)
                        .WithMany("Children")
                        .HasForeignKey("OrganizationalUnitId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.OSModel", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.File", "Content")
                        .WithMany()
                        .HasForeignKey("ContentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Content");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.OsVersionName", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.Rule", null)
                        .WithMany("OsVersionNames")
                        .HasForeignKey("RuleId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Parameter", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.ClientOption", null)
                        .WithMany("Parameters")
                        .HasForeignKey("ClientOptionId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("WPM_API.Data.DataContext.Entities.Customer", null)
                        .WithMany("Parameters")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WPM_API.Data.DataContext.Entities.ExecutionLog", null)
                        .WithMany("ScriptArguments")
                        .HasForeignKey("ExecutionLogId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Person", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.Company", "Company")
                        .WithMany("Employees")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WPM_API.Data.DataContext.Entities.Customer", "Customer")
                        .WithMany("Persons")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.ReleasePlan", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.ResourceGroup", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Rule", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.File", "Data")
                        .WithMany()
                        .HasForeignKey("DataId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("WPM_API.Data.DataContext.Entities.RuleType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Data");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Scheduler", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WPM_API.Data.DataContext.Entities.Scheduler", "ParentScheduler")
                        .WithMany("ChildSchedulers")
                        .HasForeignKey("ParentSchedulerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedByUser");

                    b.Navigation("ParentScheduler");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.ScriptVersion", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.AdminDeviceOption", null)
                        .WithMany("Versions")
                        .HasForeignKey("AdminDeviceOptionId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("WPM_API.Data.DataContext.Entities.Script", null)
                        .WithMany("Versions")
                        .HasForeignKey("ScriptId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Server", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.Domain", "Domain")
                        .WithMany("Servers")
                        .HasForeignKey("DomainId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WPM_API.Data.DataContext.Entities.OrganizationalUnit", "OrganizationalUnit")
                        .WithMany()
                        .HasForeignKey("OrganizationalUnitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WPM_API.Data.DataContext.Entities.VirtualMachine", "VirtualMachine")
                        .WithMany()
                        .HasForeignKey("VirtualMachineId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Domain");

                    b.Navigation("OrganizationalUnit");

                    b.Navigation("VirtualMachine");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.ShopItemCategory", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WPM_API.Data.DataContext.Entities.ShopItem", "ShopItem")
                        .WithMany("Categories")
                        .HasForeignKey("ShopItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("ShopItem");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.SmartDeploy.PreinstalledSoftware", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Software", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.Rule", "RuleApplicability")
                        .WithMany()
                        .HasForeignKey("RuleApplicabilityId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("WPM_API.Data.DataContext.Entities.Rule", "RuleDetection")
                        .WithMany()
                        .HasForeignKey("RuleDetectionId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("WPM_API.Data.DataContext.Entities.SoftwareStream", null)
                        .WithMany("StreamMembers")
                        .HasForeignKey("SoftwareStreamId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WPM_API.Data.DataContext.Entities.Task", "TaskInstall")
                        .WithMany()
                        .HasForeignKey("TaskInstallId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("WPM_API.Data.DataContext.Entities.Task", "TaskUninstall")
                        .WithMany()
                        .HasForeignKey("TaskUninstallId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("WPM_API.Data.DataContext.Entities.Task", "TaskUpdate")
                        .WithMany()
                        .HasForeignKey("TaskUpdateId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("RuleApplicability");

                    b.Navigation("RuleDetection");

                    b.Navigation("TaskInstall");

                    b.Navigation("TaskUninstall");

                    b.Navigation("TaskUpdate");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.SoftwaresClient", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WPM_API.Data.DataContext.Entities.Software", "Software")
                        .WithMany("Clients")
                        .HasForeignKey("SoftwareId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Software");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.SoftwaresCustomer", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WPM_API.Data.DataContext.Entities.Software", "Software")
                        .WithMany("Customers")
                        .HasForeignKey("SoftwareId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Software");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.SoftwaresSystemhouse", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.Software", "Software")
                        .WithMany("Systemhouses")
                        .HasForeignKey("SoftwareId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WPM_API.Data.DataContext.Entities.Systemhouse", "Systemhouse")
                        .WithMany()
                        .HasForeignKey("SystemhouseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Software");

                    b.Navigation("Systemhouse");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.SoftwareStream", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.File", "Icon")
                        .WithMany()
                        .HasForeignKey("IconId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Icon");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.StorageAccount", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WPM_API.Data.DataContext.Entities.ResourceGroup", "ResourceGroup")
                        .WithMany()
                        .HasForeignKey("ResourceGroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("ResourceGroup");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Storages.StorageEntryPoint", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.Customer", null)
                        .WithMany("StorageEntryPoints")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Subnet", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.VirtualNetwork", "VirtualNetwork")
                        .WithMany("Subnets")
                        .HasForeignKey("VirtualNetworkId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("VirtualNetwork");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Subscription", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.Customer", null)
                        .WithMany("Subscriptions")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Task", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.File", "ExecutionFile")
                        .WithMany()
                        .HasForeignKey("ExecutionFileId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ExecutionFile");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Token", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.User", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("WPM_API.Data.DataContext.Entities.User", "DeletedByUser")
                        .WithMany("DeletedUsers")
                        .HasForeignKey("DeletedByUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("WPM_API.Data.DataContext.Entities.Systemhouse", "Systemhouse")
                        .WithMany()
                        .HasForeignKey("SystemhouseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WPM_API.Data.DataContext.Entities.User", "UpdatedByUser")
                        .WithMany("UpdatedUsers")
                        .HasForeignKey("UpdatedByUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Customer");

                    b.Navigation("DeletedByUser");

                    b.Navigation("Systemhouse");

                    b.Navigation("UpdatedByUser");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.UserCustomer", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.Customer", "Customer")
                        .WithMany("UserCustomer")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WPM_API.Data.DataContext.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.UserForgotPassword", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.User", "User")
                        .WithMany("UserForgotPasswords")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.UserRole", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WPM_API.Data.DataContext.Entities.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.UserSubscription", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.Subscription", "Subscription")
                        .WithMany("UserSubscription")
                        .HasForeignKey("SubscriptionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WPM_API.Data.DataContext.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Subscription");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.VirtualMachine", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.Base", "Base")
                        .WithMany("VirtualMachines")
                        .HasForeignKey("BaseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Base");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Win10Version", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.Rule", null)
                        .WithMany("Win10Versions")
                        .HasForeignKey("RuleId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Win11Version", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.Rule", null)
                        .WithMany("Win11Versions")
                        .HasForeignKey("RuleId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.WMIInvenotryCmds", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.HardwareModel", b =>
                {
                    b.HasOne("WPM_API.Data.DataContext.Entities.BIOSModel", null)
                        .WithMany("ValidHardware")
                        .HasForeignKey("BIOSModelId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("WPM_API.Data.DataContext.Entities.OSModel", null)
                        .WithMany("HardwareModels")
                        .HasForeignKey("OSModelId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.AdminDeviceOption", b =>
                {
                    b.Navigation("Versions");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Base", b =>
                {
                    b.Navigation("Clients");

                    b.Navigation("Properties");

                    b.Navigation("VirtualMachines");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.BIOSModel", b =>
                {
                    b.Navigation("ValidHardware");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Client", b =>
                {
                    b.Navigation("ActivityLogs");

                    b.Navigation("AssignedOptions");

                    b.Navigation("AssignedSoftware");

                    b.Navigation("MacAddresses");

                    b.Navigation("Partition");

                    b.Navigation("Properties");

                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.ClientOption", b =>
                {
                    b.Navigation("Parameters");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Company", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("Locations");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Customer", b =>
                {
                    b.Navigation("CloudEntryPoints");

                    b.Navigation("Companies");

                    b.Navigation("CustomerImageStreams");

                    b.Navigation("CustomerSoftwareStreams");

                    b.Navigation("Defaults");

                    b.Navigation("Locations");

                    b.Navigation("Parameters");

                    b.Navigation("Persons");

                    b.Navigation("StorageEntryPoints");

                    b.Navigation("Subscriptions");

                    b.Navigation("UserCustomer");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.CustomerHardwareModel", b =>
                {
                    b.Navigation("Drivers");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.CustomerImageStream", b =>
                {
                    b.Navigation("Images");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.CustomerSoftwareStream", b =>
                {
                    b.Navigation("StreamMembers");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Domain", b =>
                {
                    b.Navigation("DNS");

                    b.Navigation("DomainUsers");

                    b.Navigation("OrganizationalUnits");

                    b.Navigation("Servers");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Driver", b =>
                {
                    b.Navigation("DriverShopItems");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.ExecutionLog", b =>
                {
                    b.Navigation("ScriptArguments");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Image", b =>
                {
                    b.Navigation("Clients");

                    b.Navigation("Customers");

                    b.Navigation("Systemhouses");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.ImageStream", b =>
                {
                    b.Navigation("Images");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.NotificationEmail", b =>
                {
                    b.Navigation("NotificationEmailAttachments");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Order", b =>
                {
                    b.Navigation("ShopItems");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.OrganizationalUnit", b =>
                {
                    b.Navigation("Children");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.OSModel", b =>
                {
                    b.Navigation("HardwareModels");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Rule", b =>
                {
                    b.Navigation("Architecture");

                    b.Navigation("OsVersionNames");

                    b.Navigation("Win10Versions");

                    b.Navigation("Win11Versions");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Scheduler", b =>
                {
                    b.Navigation("ChildSchedulers");

                    b.Navigation("NotificationEmails");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Script", b =>
                {
                    b.Navigation("Versions");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.ScriptVersion", b =>
                {
                    b.Navigation("Attachments");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.ShopItem", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("DriverShopItems");

                    b.Navigation("Images");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Software", b =>
                {
                    b.Navigation("AssignedClients");

                    b.Navigation("Clients");

                    b.Navigation("Customers");

                    b.Navigation("Systemhouses");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.SoftwareStream", b =>
                {
                    b.Navigation("StreamMembers");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Subscription", b =>
                {
                    b.Navigation("UserSubscription");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Systemhouse", b =>
                {
                    b.Navigation("Customer");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.Task", b =>
                {
                    b.Navigation("Files");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.User", b =>
                {
                    b.Navigation("DeletedUsers");

                    b.Navigation("UpdatedUsers");

                    b.Navigation("UserForgotPasswords");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.VendorModel", b =>
                {
                    b.Navigation("Files");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.VirtualMachine", b =>
                {
                    b.Navigation("Disks");
                });

            modelBuilder.Entity("WPM_API.Data.DataContext.Entities.VirtualNetwork", b =>
                {
                    b.Navigation("Subnets");
                });
#pragma warning restore 612, 618
        }
    }
}
